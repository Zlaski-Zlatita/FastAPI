from fastapi import FastAPI                  из библиотеки импортировать основной класс

app = FastAPI()                              создадим объект на основе этого класса


@app.get("/")                                описываем обработку url адресов, обращаемся к объекту обращаемся к url адресу, просто / означает, что мы обрабатываем главную страницу
async def home() -> list? int? dict{str, str} etc:                                  здесь же прописываем, что конкретно мы будем возвращать из нашей функции dict{ключ, знач-е}   + сделаем функции ассинхронными: результат выполнения функции доступен спустя некоторое время. 
    return "Hello world" или можно возвращать словарь {"data": "message"} ключ и значение или список {5? 6}           при переходе на главную страницу я хочу возвращать именно такой словарь
выполняем запуск всего проекта и переходим на главную страницу: в терминале обращаемся к библиотеке uvicorn main:app --reload это значит, что кажды раз, когда мы будем добавлять функцию в этот файл - сервер будет перезагружаться. Далее переходем по выданному в табеле url адресу - это ссылка на сайт
                    frontend часть - это клиентская часть, чтобы перейти на страницу с документацией переходим по url адресу /docs


@app.get("/contacts")
async def contacts() -> int:         при переходе по этому адресу я хочу вызывать функцию
        return 34


posts = [                     
     {'id': 1, 'title': 'News one', 'body': "Text 1"},
     {'id': 2, 'title': 'News one', 'body': "Text 1"},
     {'id': 3, 'title': 'News one', 'body': "Text 1"},
]
